[gd_scene load_steps=4 format=2]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 10, 10 )
subdivide_width = 32
subdivide_depth = 32

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode specular_toon;

float height_at(vec2 vert) {
	float height = cos(vert.x * TIME / 5.0) * sin(vert.y * TIME / 5.0) * 0.35;
	return height;
}

void vertex() {
	VERTEX.y += cos(VERTEX.x * TIME / 5.0) * sin(VERTEX.z * TIME / 5.0) * 0.35;
	// Calculate Normal Vector - https://docs.godotengine.org/en/3.0/tutorials/3d/vertex_displacement_with_shaders.html
	vec2 e = vec2(0.01, 0.0);
	vec3 normal = normalize(vec3(height_at(VERTEX.xz - e) - height_at(VERTEX.xz + e), 2.0 * e.x, height_at(VERTEX.xz - e.yx) - height_at(VERTEX.xz + e.yx)));
	NORMAL = normal;
}

void fragment() {
	float fresnel = sqrt(1.0 - dot(NORMAL,VIEW));
	RIM = 0.2;
	METALLIC = 0.8;
	ROUGHNESS = 0.01 * (1.0 - fresnel);
	ALBEDO = vec3(0.02, 0.01, 0.02) + (0.1 * fresnel);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.64718, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
